name: Firmware CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [F072, F303]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install ARM toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi libnewlib-arm-none-eabi dfu-util

      - name: Build firmware
        env:
          TARGET: ${{ matrix.target }}
        run: |
          make clean
          make -j$(nproc)

      - name: Generate DFU image
        env:
          TARGET: ${{ matrix.target }}
        run: |
          if [ "${{ matrix.target }}" = "F303" ]; then
            project=H4
            dfuse_preset=stm32f303xc
          else
            project=H
            dfuse_preset=stm32f072xb
          fi
          python3 tools/make_dfu.py \
            "build/${project}.bin" \
            "build/${project}.dfu" \
            --preset-target "$dfuse_preset" \
            --device-id 0x0000
          dfu-suffix --add "build/${project}.dfu" --pid 0xdf11 --vid 0x0483 --did 0x0000 --spec 0x011a

      - name: Determine artefact name
        id: project
        run: |
          if [ "${{ matrix.target }}" = "F303" ]; then
            echo "name=H4" >> "$GITHUB_OUTPUT"
          else
            echo "name=H" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: nanovna-${{ steps.project.outputs.name }}-${{ matrix.target }}
          path: |
            build/${{ steps.project.outputs.name }}.bin
            build/${{ steps.project.outputs.name }}.hex
            build/${{ steps.project.outputs.name }}.dfu
          if-no-files-found: error
